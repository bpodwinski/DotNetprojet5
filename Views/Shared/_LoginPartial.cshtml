@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item dropdown">
	    <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
			@User.Identity?.Name!
	    </a>
	    <ul class="dropdown-menu">
		    <li>
			    <a class="dropdown-item" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
				    <i class="bi bi-gear-fill me-2"></i>
				    Compte et paramètres
			    </a>
		    </li>
		    <li>
			    <a class="dropdown-item" asp-area="Identity" asp-page="/Account/Register">
				    <i class="bi bi-plus-circle-fill me-2"></i>
				    Créer un compte
			    </a>
		    </li>
		    <li><hr class="dropdown-divider"></li>
		    <li>
			    <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
				    <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
			    </form>
		    </li>
	    </ul>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
